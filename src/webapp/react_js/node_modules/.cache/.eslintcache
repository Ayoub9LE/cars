[{"E:\\IDSIT\\IDSIT3\\Full stuck\\Atelier Complet\\SpringDataRest - Copy\\src\\webapp\\reactjs\\src\\index.js":"1","E:\\IDSIT\\IDSIT3\\Full stuck\\Atelier Complet\\SpringDataRest - Copy\\src\\webapp\\reactjs\\src\\reportWebVitals.js":"2","E:\\IDSIT\\IDSIT3\\Full stuck\\Atelier Complet\\SpringDataRest - Copy\\src\\webapp\\reactjs\\src\\App.js":"3","E:\\IDSIT\\IDSIT3\\Full stuck\\Atelier Complet\\SpringDataRest - Copy\\src\\webapp\\reactjs\\src\\Components\\NavigationBar.js":"4","E:\\IDSIT\\IDSIT3\\Full stuck\\Atelier Complet\\SpringDataRest - Copy\\src\\webapp\\reactjs\\src\\Components\\Bienvenue.js":"5","E:\\IDSIT\\IDSIT3\\Full stuck\\Atelier Complet\\SpringDataRest - Copy\\src\\webapp\\reactjs\\src\\Components\\Footer.js":"6","E:\\IDSIT\\IDSIT3\\Full stuck\\Atelier Complet\\SpringDataRest - Copy\\src\\webapp\\reactjs\\src\\Components\\Voiture.js":"7","E:\\IDSIT\\IDSIT3\\Full stuck\\Atelier Complet\\SpringDataRest - Copy\\src\\webapp\\reactjs\\src\\Components\\VoitureListe.js":"8","E:\\IDSIT\\IDSIT3\\Full stuck\\Atelier Complet\\SpringDataRest - Copy\\src\\webapp\\reactjs\\src\\Components\\myToast.js":"9","E:\\IDSIT\\IDSIT3\\Full stuck\\Atelier Complet\\SpringDataRest - Copy\\src\\webapp\\reactjs\\src\\Components\\EditVoiture.js":"10"},{"size":535,"mtime":1698705249908,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":1698705249909,"results":"13","hashOfConfig":"12"},{"size":1581,"mtime":1699203870053,"results":"14","hashOfConfig":"12"},{"size":1039,"mtime":1699219969017,"results":"15","hashOfConfig":"12"},{"size":1892,"mtime":1699217266628,"results":"16","hashOfConfig":"12"},{"size":605,"mtime":1698713892340,"results":"17","hashOfConfig":"12"},{"size":9090,"mtime":1699220162393,"results":"18","hashOfConfig":"12"},{"size":5517,"mtime":1699219813027,"results":"19","hashOfConfig":"12"},{"size":964,"mtime":1699220597489,"results":"20","hashOfConfig":"12"},{"size":9604,"mtime":1699198626193,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},"1wkmpzt",{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},"E:\\IDSIT\\IDSIT3\\Full stuck\\Atelier Complet\\SpringDataRest - Copy\\src\\webapp\\reactjs\\src\\index.js",[],[],["55"],"E:\\IDSIT\\IDSIT3\\Full stuck\\Atelier Complet\\SpringDataRest - Copy\\src\\webapp\\reactjs\\src\\reportWebVitals.js",[],[],"E:\\IDSIT\\IDSIT3\\Full stuck\\Atelier Complet\\SpringDataRest - Copy\\src\\webapp\\reactjs\\src\\App.js",["56"],[],"E:\\IDSIT\\IDSIT3\\Full stuck\\Atelier Complet\\SpringDataRest - Copy\\src\\webapp\\reactjs\\src\\Components\\NavigationBar.js",["57"],[],"E:\\IDSIT\\IDSIT3\\Full stuck\\Atelier Complet\\SpringDataRest - Copy\\src\\webapp\\reactjs\\src\\Components\\Bienvenue.js",[],[],"E:\\IDSIT\\IDSIT3\\Full stuck\\Atelier Complet\\SpringDataRest - Copy\\src\\webapp\\reactjs\\src\\Components\\Footer.js",[],[],["58"],"E:\\IDSIT\\IDSIT3\\Full stuck\\Atelier Complet\\SpringDataRest - Copy\\src\\webapp\\reactjs\\src\\Components\\Voiture.js",[],[],"E:\\IDSIT\\IDSIT3\\Full stuck\\Atelier Complet\\SpringDataRest - Copy\\src\\webapp\\reactjs\\src\\Components\\VoitureListe.js",[],[],"E:\\IDSIT\\IDSIT3\\Full stuck\\Atelier Complet\\SpringDataRest - Copy\\src\\webapp\\reactjs\\src\\Components\\myToast.js",[],[],"E:\\IDSIT\\IDSIT3\\Full stuck\\Atelier Complet\\SpringDataRest - Copy\\src\\webapp\\reactjs\\src\\Components\\EditVoiture.js",["59"],[],"import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { Button, Card, Form, FormGroup, Col, Row } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlusSquare, faSave, faUndo } from \"@fortawesome/free-solid-svg-icons\";\r\nimport MyToast from './myToast';\r\n\r\nclass EditVoiture extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            marque: '',\r\n            modele: '',\r\n            couleur: '',\r\n            immatricule: '',\r\n            annee: '',\r\n            prix: '',\r\n            showToast: false,\r\n        };\r\n\r\n        this.voitureChange = this.voitureChange.bind(this);\r\n        this.submitVoiture = this.submitVoiture.bind(this);\r\n        this.resetVoiture = this.resetVoiture.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        const voitureId = this.props.match.params.id;\r\n        if (voitureId) {\r\n            this.loadVoitureDetails(voitureId);\r\n        }\r\n    }\r\n\r\n    loadVoitureDetails(voitureId) {\r\n        axios.get(`http://localhost:8080/voitures/${voitureId}`)\r\n            .then(response => {\r\n                const voitureDetails = response.data;\r\n                this.setState({\r\n                    marque: voitureDetails.marque,\r\n                    modele: voitureDetails.modele,\r\n                    couleur: voitureDetails.couleur,\r\n                    immatricule: voitureDetails.immatricule,\r\n                    annee: voitureDetails.annee,\r\n                    prix: voitureDetails.prix,\r\n                });\r\n            })\r\n            .catch(error => {\r\n                console.error(\"Erreur lors du chargement des détails de la voiture :\", error);\r\n            });\r\n    }\r\n\r\n    resetVoiture() {\r\n        this.setState({\r\n            marque: '',\r\n            modele: '',\r\n            couleur: '',\r\n            immatricule: '',\r\n            annee: '',\r\n            prix: '',\r\n        });\r\n    }\r\n\r\n    submitVoiture(event) {\r\n        event.preventDefault();\r\n        const voiture = {\r\n            marque: this.state.marque,\r\n            modele: this.state.modele,\r\n            couleur: this.state.couleur,\r\n            immatricule: this.state.immatricule,\r\n            annee: this.state.annee,\r\n            prix: this.state.prix,\r\n        };\r\n\r\n        const voitureId = this.props.match.params.id;\r\n        const axiosMethod = voitureId ? axios.put : axios.post;\r\n        const axiosUrl = voitureId ? `http://localhost:8080/voitures/${voitureId}` : \"http://localhost:8080/voitures\";\r\n\r\n        axiosMethod(axiosUrl, voiture)\r\n            .then(response => {\r\n                if (response.data) {\r\n                    this.setState({ showToast: true });\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.error(\"Erreur lors de la modification/ajout de la voiture :\", error);\r\n            });\r\n    }\r\n\r\n    voitureChange(event) {\r\n        this.setState({\r\n            [event.target.name]: event.target.value,\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div style={{ display: this.state.showToast ? \"block\" : \"none\" }}>\r\n                    <MyToast show={this.state.showToast} message=\"Voiture enregistrée avec succès\" type=\"success\" />\r\n                </div>\r\n                <Card className=\"border border-dark bg-dark text-white\">\r\n                    <Card.Header>\r\n                        <FontAwesomeIcon icon={faSave} /> {this.props.match.params.id ? \"Modifier Voiture\" : \"Ajouter Voiture\"}\r\n                    </Card.Header>\r\n                    <Card.Body>\r\n                        <Form onReset={this.resetVoiture} onSubmit={this.submitVoiture} id=\"VoitureFormId\">\r\n                            <Row>\r\n                                <Col>\r\n                                    <FormGroup controlId=\"formGridMarque\">\r\n                                        <Form.Label>Marque</Form.Label>\r\n                                        <Form.Control\r\n                                            required\r\n                                            type=\"text\"\r\n                                            className=\"bg-dark text-white\"\r\n                                            placeholder=\"Entrez Marque Voiture\"\r\n                                            name=\"marque\"\r\n                                            value={this.state.marque}\r\n                                            onChange={this.voitureChange}\r\n                                        />\r\n                                    </FormGroup>\r\n                                </Col>\r\n                                <Col>\r\n                                    <FormGroup controlId=\"formGridModele\">\r\n                                        <Form.Label>Modèle</Form.Label>\r\n                                        <Form.Control\r\n                                            required\r\n                                            type=\"text\"\r\n                                            className=\"bg-dark text-white\"\r\n                                            placeholder=\"Entrez Modèle Voiture\"\r\n                                            name=\"modele\"\r\n                                            value={this.state.modele}\r\n                                            onChange={this.voitureChange}\r\n                                        />\r\n                                    </FormGroup>\r\n                                </Col>\r\n                                <Col>\r\n                                    <FormGroup controlId=\"formGridCouleur\">\r\n                                        <Form.Label>Couleur</Form.Label>\r\n                                        <Form.Control\r\n                                            required\r\n                                            type=\"text\"\r\n                                            className=\"bg-dark text-white\"\r\n                                            placeholder=\"Entrez Couleur Voiture\"\r\n                                            name=\"couleur\"\r\n                                            value={this.state.couleur}\r\n                                            onChange={this.voitureChange}\r\n                                        />\r\n                                    </FormGroup>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col>\r\n                                    <FormGroup controlId=\"formGridImmatricule\">\r\n                                        <Form.Label>Immatricule</Form.Label>\r\n                                        <Form.Control\r\n                                            required\r\n                                            type=\"text\"\r\n                                            className=\"bg-dark text-white\"\r\n                                            placeholder=\"Entrez Immatricule Voiture\"\r\n                                            name=\"immatricule\"\r\n                                            value={this.state.immatricule}\r\n                                            onChange={this.voitureChange}\r\n                                        />\r\n                                    </FormGroup>\r\n                                </Col>\r\n                                <Col>\r\n                                    <FormGroup controlId=\"formGridAnnee\">\r\n                                        <Form.Label>Année</Form.Label>\r\n                                        <Form.Control\r\n                                            required\r\n                                            type=\"text\"\r\n                                            className=\"bg-dark text-white\"\r\n                                            placeholder=\"Entrez Année Voiture\"\r\n                                            name=\"annee\"\r\n                                            value={this.state.annee}\r\n                                            onChange={this.voitureChange}\r\n                                        />\r\n                                    </FormGroup>\r\n                                </Col>\r\n                                <Col>\r\n                                    <FormGroup controlId=\"formGridPrix\">\r\n                                        <Form.Label>Prix</Form.Label>\r\n                                        <Form.Control\r\n                                            required\r\n                                            type=\"text\"\r\n                                            className=\"bg-dark text-white\"\r\n                                            placeholder=\"Entrez Prix Voiture\"\r\n                                            name=\"prix\"\r\n                                            value={this.state.prix}\r\n                                            onChange={this.voitureChange}\r\n                                        />\r\n                                    </FormGroup>\r\n                                </Col>\r\n                            </Row>\r\n                            <Button size=\"sm\" variant=\"success\" type=\"submit\">\r\n                                <FontAwesomeIcon icon={faSave} /> {this.props.match.params.id ? \"Modifier\" : \"Ajouter\"}\r\n                            </Button>{' '}\r\n                            <Button size=\"sm\" variant=\"info\" type=\"reset\">\r\n                                <FontAwesomeIcon icon={faUndo} /> Réinitialiser\r\n                            </Button>\r\n                        </Form>\r\n                    </Card.Body>\r\n                </Card>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EditVoiture;\r\n",{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","severity":1,"message":"63","line":3,"column":50,"nodeType":"64","messageId":"65","endLine":3,"endColumn":58},{"ruleId":"66","severity":1,"message":"67","line":10,"column":17,"nodeType":"68","endLine":10,"endColumn":126},{"ruleId":"60","replacedBy":"69"},{"ruleId":"62","severity":1,"message":"70","line":5,"column":10,"nodeType":"64","messageId":"65","endLine":5,"endColumn":22},"no-new-object",["71"],"no-unused-vars","'Navigate' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["71"],"'faPlusSquare' is defined but never used.","no-object-constructor"]